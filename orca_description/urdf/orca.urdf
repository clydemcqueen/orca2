<?xml version="1.0" encoding="utf-8"?>
<!-- =================================================================================== -->
<!-- |    This document was autogenerated by xacro from orca.urdf.xacro                | -->
<!-- |    EDITING THIS FILE BY HAND IS NOT RECOMMENDED                                 | -->
<!-- =================================================================================== -->
<robot name="orca" xmlns:xacro="http://ros.org/wiki/xacro">
  <!-- Materials -->
  <material name="gray">
    <color rgba="0.5 0.5 0.5 1.0"/>
  </material>
  <material name="blue">
    <color rgba="0.5 0.5 1.0 1.0"/>
  </material>
  <material name="red">
    <color rgba="1.0 0.0 0.0 1.0"/>
  </material>
  <!-- Base link -->
  <link name="base_link">
    <!-- Inertial -->
    <inertial>
      <origin xyz="0 0 0.011"/>
      <!-- Center of mass -->
      <mass value="9.75"/>
      <inertia ixx="0.1452425" ixy="0.0" ixz="0.0" iyy="0.2221090625" iyz="0.0" izz="0.2625130625"/>
    </inertial>
    <!-- Float -->
    <visual>
      <origin xyz="0.12 0.11 0.07"/>
      <geometry>
        <box size="0.15 0.09 0.08"/>
      </geometry>
      <material name="blue"/>
    </visual>
    <!-- Float -->
    <visual>
      <origin xyz="0.12 -0.11 0.07"/>
      <geometry>
        <box size="0.15 0.09 0.08"/>
      </geometry>
    </visual>
    <!-- Float -->
    <visual>
      <origin xyz="-0.12 0.11 0.07"/>
      <geometry>
        <box size="0.15 0.09 0.08"/>
      </geometry>
    </visual>
    <!-- Float -->
    <visual>
      <origin xyz="-0.12 -0.11 0.07"/>
      <geometry>
        <box size="0.15 0.09 0.08"/>
      </geometry>
    </visual>
    <!-- Electronics tube -->
    <visual>
      <origin rpy="0 1.57079632679 0" xyz="0 0 0.063"/>
      <geometry>
        <cylinder length="0.32" radius="0.055"/>
      </geometry>
    </visual>
    <!-- Battery tube -->
    <visual>
      <origin rpy="0 1.57079632679 0" xyz="0 0 -0.05"/>
      <geometry>
        <cylinder length="0.25" radius="0.045"/>
      </geometry>
    </visual>
    <!-- Left down-facing camera tube -->
    <visual>
      <origin rpy="0 0 0" xyz="-0.15 0.18 0"/>
      <geometry>
        <cylinder length="0.135" radius="0.0275"/>
      </geometry>
    </visual>
    <!-- Right down-facing camera tube -->
    <visual>
      <origin rpy="0 0 0" xyz="-0.15 -0.18 0"/>
      <geometry>
        <cylinder length="0.135" radius="0.0275"/>
      </geometry>
    </visual>
    <!-- Collision region -->
    <collision>
      <geometry>
        <box size="0.457 0.338 0.254"/>
      </geometry>
    </collision>
  </link>
  <!-- Barometer link TODO /tf too low -->
  <link name="baro_link">
    <visual>
      <origin rpy="0 1.57079632679 0" xyz="0 0 0.05"/>
      <geometry>
        <cylinder length="0.01" radius="0.01"/>
      </geometry>
      <material name="red"/>
    </visual>
  </link>
  <!-- Attach baro_link to base_link -->
  <joint name="baro_joint" type="fixed">
    <origin rpy="0 0 0" xyz="-0.16 0 0"/>
    <parent link="base_link"/>
    <child link="baro_link"/>
  </joint>
  <!-- Forward camera link -->
  <link name="forward_camera_link">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <sphere radius="0.052"/>
      </geometry>
      <material name="red"/>
    </visual>
  </link>
  <!-- Attach forward_camera_link to base_link -->
  <joint name="forward_camera_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.16 0 0.063"/>
    <parent link="base_link"/>
    <child link="forward_camera_link"/>
  </joint>
  <!-- Forward camera frame -->
  <link name="forward_camera_frame"/>
  <!-- Attach forward_camera_frame to base_link (parsed by filter_node) -->
  <joint name="forward_camera_frame_joint" type="fixed">
    <origin rpy="-1.57079632679 0 -1.57079632679" xyz="0.16 0 0.063"/>
    <parent link="base_link"/>
    <child link="forward_camera_frame"/>
  </joint>
  <!-- Left camera link -->
  <link name="left_camera_link">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <sphere radius="0.026"/>
      </geometry>
      <material name="red"/>
    </visual>
  </link>
  <!-- Attach left_camera_link to base_link -->
  <joint name="left_camera_joint" type="fixed">
    <axis xyz="0 1 0"/>
    <origin rpy="0 1.57079632679 0" xyz="-0.15 0.18 -0.0675"/>
    <parent link="base_link"/>
    <child link="left_camera_link"/>
  </joint>
  <!-- Left camera frame -->
  <link name="left_camera_frame"/>
  <!-- Attach left_camera_frame to base_link (parsed by filter_node)  -->
  <joint name="left_camera_frame_joint" type="fixed">
    <origin rpy="3.14159265359 0 -1.57079632679" xyz="-0.15 0.18 -0.0675"/>
    <parent link="base_link"/>
    <child link="left_camera_frame"/>
  </joint>
  <!-- Right camera link -->
  <link name="right_camera_link">
    <!-- Camera hemisphere -->
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <sphere radius="0.026"/>
      </geometry>
      <material name="red"/>
    </visual>
  </link>
  <!-- Attach right_camera_link to base_link -->
  <joint name="right_camera_joint" type="fixed">
    <axis xyz="0 1 0"/>
    <origin rpy="0 1.57079 0" xyz="-0.15 -0.18 -0.0675"/>
    <parent link="base_link"/>
    <child link="right_camera_link"/>
  </joint>
  <!-- Right camera frame -->
  <link name="right_camera_frame"/>
  <!-- Attach right_camera_frame to base_link -->
  <joint name="right_camera_frame_joint" type="fixed">
    <origin rpy="3.14159265359 0 -1.57079632679" xyz="-0.15 -0.18 -0.0675"/>
    <parent link="base_link"/>
    <child link="right_camera_frame"/>
  </joint>
  <link name="t200_link_front_right">
    <!-- Front cone -->
    <visual>
      <origin xyz="0 0 0"/>
      <geometry>
        <sphere radius="0.02"/>
      </geometry>
      <material name="gray"/>
      <!-- All visual elements in this link pick up this material -->
    </visual>
    <!-- Rear cone -->
    <visual>
      <origin xyz="0 0 -0.07"/>
      <geometry>
        <sphere radius="0.02"/>
      </geometry>
    </visual>
    <!-- Thruster body -->
    <visual>
      <origin xyz="0 0 -0.035"/>
      <geometry>
        <cylinder length="0.07" radius="0.02"/>
      </geometry>
    </visual>
    <!-- Propeller guard -->
    <visual>
      <origin xyz="0 0 -0.0225"/>
      <geometry>
        <cylinder length="0.045" radius="0.045"/>
      </geometry>
    </visual>
  </link>
  <joint name="t200_joint_front_right" type="fixed">
    <origin rpy="0 1.57079632679 0.785398163397" xyz="0.15 -0.09 -0.009"/>
    <parent link="base_link"/>
    <child link="t200_link_front_right"/>
  </joint>
  <link name="t200_link_front_left">
    <!-- Front cone -->
    <visual>
      <origin xyz="0 0 0"/>
      <geometry>
        <sphere radius="0.02"/>
      </geometry>
      <material name="gray"/>
      <!-- All visual elements in this link pick up this material -->
    </visual>
    <!-- Rear cone -->
    <visual>
      <origin xyz="0 0 -0.07"/>
      <geometry>
        <sphere radius="0.02"/>
      </geometry>
    </visual>
    <!-- Thruster body -->
    <visual>
      <origin xyz="0 0 -0.035"/>
      <geometry>
        <cylinder length="0.07" radius="0.02"/>
      </geometry>
    </visual>
    <!-- Propeller guard -->
    <visual>
      <origin xyz="0 0 -0.0225"/>
      <geometry>
        <cylinder length="0.045" radius="0.045"/>
      </geometry>
    </visual>
  </link>
  <joint name="t200_joint_front_left" type="fixed">
    <origin rpy="0 1.57079632679 -0.785398163397" xyz="0.15 0.09 -0.009"/>
    <parent link="base_link"/>
    <child link="t200_link_front_left"/>
  </joint>
  <link name="t200_link_rear_right">
    <!-- Front cone -->
    <visual>
      <origin xyz="0 0 0"/>
      <geometry>
        <sphere radius="0.02"/>
      </geometry>
      <material name="gray"/>
      <!-- All visual elements in this link pick up this material -->
    </visual>
    <!-- Rear cone -->
    <visual>
      <origin xyz="0 0 -0.07"/>
      <geometry>
        <sphere radius="0.02"/>
      </geometry>
    </visual>
    <!-- Thruster body -->
    <visual>
      <origin xyz="0 0 -0.035"/>
      <geometry>
        <cylinder length="0.07" radius="0.02"/>
      </geometry>
    </visual>
    <!-- Propeller guard -->
    <visual>
      <origin xyz="0 0 -0.0225"/>
      <geometry>
        <cylinder length="0.045" radius="0.045"/>
      </geometry>
    </visual>
  </link>
  <joint name="t200_joint_rear_right" type="fixed">
    <origin rpy="0 1.57079632679 2.35619449019" xyz="-0.15 -0.09 -0.009"/>
    <parent link="base_link"/>
    <child link="t200_link_rear_right"/>
  </joint>
  <link name="t200_link_rear_left">
    <!-- Front cone -->
    <visual>
      <origin xyz="0 0 0"/>
      <geometry>
        <sphere radius="0.02"/>
      </geometry>
      <material name="gray"/>
      <!-- All visual elements in this link pick up this material -->
    </visual>
    <!-- Rear cone -->
    <visual>
      <origin xyz="0 0 -0.07"/>
      <geometry>
        <sphere radius="0.02"/>
      </geometry>
    </visual>
    <!-- Thruster body -->
    <visual>
      <origin xyz="0 0 -0.035"/>
      <geometry>
        <cylinder length="0.07" radius="0.02"/>
      </geometry>
    </visual>
    <!-- Propeller guard -->
    <visual>
      <origin xyz="0 0 -0.0225"/>
      <geometry>
        <cylinder length="0.045" radius="0.045"/>
      </geometry>
    </visual>
  </link>
  <joint name="t200_joint_rear_left" type="fixed">
    <origin rpy="0 1.57079632679 -2.35619449019" xyz="-0.15 0.09 -0.009"/>
    <parent link="base_link"/>
    <child link="t200_link_rear_left"/>
  </joint>
  <link name="t200_link_vertical_right">
    <!-- Front cone -->
    <visual>
      <origin xyz="0 0 0"/>
      <geometry>
        <sphere radius="0.02"/>
      </geometry>
      <material name="gray"/>
      <!-- All visual elements in this link pick up this material -->
    </visual>
    <!-- Rear cone -->
    <visual>
      <origin xyz="0 0 -0.07"/>
      <geometry>
        <sphere radius="0.02"/>
      </geometry>
    </visual>
    <!-- Thruster body -->
    <visual>
      <origin xyz="0 0 -0.035"/>
      <geometry>
        <cylinder length="0.07" radius="0.02"/>
      </geometry>
    </visual>
    <!-- Propeller guard -->
    <visual>
      <origin xyz="0 0 -0.0225"/>
      <geometry>
        <cylinder length="0.045" radius="0.045"/>
      </geometry>
    </visual>
  </link>
  <joint name="t200_joint_vertical_right" type="fixed">
    <origin rpy="0 0 0" xyz="0 -0.105 0.09"/>
    <parent link="base_link"/>
    <child link="t200_link_vertical_right"/>
  </joint>
  <link name="t200_link_vertical_left">
    <!-- Front cone -->
    <visual>
      <origin xyz="0 0 0"/>
      <geometry>
        <sphere radius="0.02"/>
      </geometry>
      <material name="gray"/>
      <!-- All visual elements in this link pick up this material -->
    </visual>
    <!-- Rear cone -->
    <visual>
      <origin xyz="0 0 -0.07"/>
      <geometry>
        <sphere radius="0.02"/>
      </geometry>
    </visual>
    <!-- Thruster body -->
    <visual>
      <origin xyz="0 0 -0.035"/>
      <geometry>
        <cylinder length="0.07" radius="0.02"/>
      </geometry>
    </visual>
    <!-- Propeller guard -->
    <visual>
      <origin xyz="0 0 -0.0225"/>
      <geometry>
        <cylinder length="0.045" radius="0.045"/>
      </geometry>
    </visual>
  </link>
  <joint name="t200_joint_vertical_left" type="fixed">
    <origin rpy="0 0 0" xyz="0 0.105 0.09"/>
    <parent link="base_link"/>
    <child link="t200_link_vertical_left"/>
  </joint>
  <!--
      The OrcaBuoyancyPlugin applies a force that counteracts gravity.
      Buoyancy force is not applied if the link is above the surface of the water.
    -->
  <gazebo>
    <plugin filename="libOrcaBuoyancyPlugin.so" name="OrcaBuoyancyPlugin">
      <fluid_density>997</fluid_density>
      <link name="base_link">
        <center_of_volume>0 0 0.06</center_of_volume>
        <volume>0.01</volume>
      </link>
    </plugin>
  </gazebo>
  <!--
    The OrcaDragPlugin applies a drag force proportional to velocity^2.
    -->
  <gazebo>
    <plugin filename="libOrcaDragPlugin.so" name="OrcaDragPlugin">
      <link name="base_link">
        <center_of_mass>0 0 0.011</center_of_mass>
        <tether_attach>-0.25 0 -0.009</tether_attach>
        <tether_drag>0</tether_drag>
      </link>
    </plugin>
  </gazebo>
  <!--
      The OrcaThrusterPlugin turns ROS messages into thrust forces. Each message contains an array of thrust efforts [-1.0, 1.0].
      The URDF to SDF translation nukes the joints, so joint locations must appear here.
    -->
  <gazebo>
    <plugin filename="libOrcaThrusterPlugin.so" name="OrcaThrusterPlugin">
      <link_name>orca::base_link</link_name>
      <thruster name="front_right">
        <!-- name attributes are ignored; the tag order must match the message array order -->
        <pos_force>50</pos_force>
        <!-- units are N, positive for ccw, negative for cw -->
        <neg_force>40</neg_force>
        <!-- units are N, positive for ccw, negative for cw -->
        <origin rpy="0 1.57079632679 0.785398163397" xyz="0.15 -0.09 -0.009"/>
      </thruster>
      <thruster name="front_left">
        <pos_force>50</pos_force>
        <neg_force>40</neg_force>
        <origin rpy="0 1.57079632679 -0.785398163397" xyz="0.15 0.09 -0.009"/>
      </thruster>
      <thruster name="rear_right">
        <pos_force>-40</pos_force>
        <neg_force>-50</neg_force>
        <origin rpy="0 1.57079632679 2.35619449019" xyz="-0.15 -0.09 -0.009"/>
      </thruster>
      <thruster name="rear_left">
        <pos_force>-40</pos_force>
        <neg_force>-50</neg_force>
        <origin rpy="0 1.57079632679 -2.35619449019" xyz="-0.15 0.09 -0.009"/>
      </thruster>
      <thruster name="vertical_right">
        <pos_force>50</pos_force>
        <neg_force>40</neg_force>
        <origin rpy="0 0 0" xyz="0 -0.105 0.09"/>
      </thruster>
      <thruster name="vertical_left">
        <pos_force>-40</pos_force>
        <neg_force>-50</neg_force>
        <origin rpy="0 0 0" xyz="0 0.105 0.09"/>
      </thruster>
    </plugin>
  </gazebo>
  <!--
      The OrcaBarometerPlugin (wraps a Gazebo altimeter sensor) simulates a barometer sensor such as the BlueRobotics Bar30.
    -->
  <gazebo reference="baro_link">
    <sensor name="barometer_sensor" type="altimeter">
      <update_rate>10</update_rate>
      <!-- Match orca_driver rate -->
      <plugin filename="libOrcaBarometerPlugin.so" name="OrcaBarometerPlugin">
        <fluid_density>997</fluid_density>
      </plugin>
    </sensor>
  </gazebo>
  <!--
      The OrcaIMUPlugin (wraps a Gazebo IMU sensor) simulates an IMU sensor such as the Phidgets 1044.
    -->
  <gazebo reference="base_link">
    <gravity>true</gravity>
    <sensor name="imu_sensor" type="imu">
      <update_rate>50</update_rate>
      <!-- Gazebeo max seems to be 50Hz -->
      <plugin filename="libOrcaIMUPlugin.so" name="OrcaIMUPlugin"/>
      <pose>0 0 0 0 0 0</pose>
    </sensor>
  </gazebo>
  <!-- Forward-facing camera: -->
  <!--    <xacro:camera_plugin prefix="forward"/>-->
  <gazebo reference="left_camera_link">
    <sensor name="left_camera" type="camera">
      <update_rate>30.0</update_rate>
      <camera name="head">
        <horizontal_fov>1.4</horizontal_fov>
        <image>
          <width>800</width>
          <height>600</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.02</near>
          <far>300</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <!-- Noise is sampled independently per pixel on each frame.
                             That pixel's noise value is added to each of its color
                             channels, which at that point lie in the range [0,1]. -->
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>
      </camera>
      <plugin filename="libgazebo_ros_camera.so" name="left_camera_controller">
        <alwaysOn>true</alwaysOn>
        <updateRate>0.0</updateRate>
        <cameraName>orca/left_camera</cameraName>
        <imageTopicName>image_raw</imageTopicName>
        <cameraInfoTopicName>camera_info</cameraInfoTopicName>
        <frameName>left_camera_link</frameName>
        <hackBaseline>0.07</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
      </plugin>
    </sensor>
  </gazebo>
  <!-- Right down-facing camera: -->
  <!--    <xacro:camera_plugin prefix="right"/>-->
  <gazebo>
    <plugin filename="libgazebo_ros_p3d.so" name="p3d_test">
      <ros>
        <argument>odom:=ground_truth</argument>
      </ros>
      <update_rate>30.0</update_rate>
      <body_name>base_link</body_name>
      <frame_name>map</frame_name>
      <xyz_offsets>0 0 0</xyz_offsets>
      <rpy_offsets>0 0 0</rpy_offsets>
    </plugin>
  </gazebo>
</robot>

